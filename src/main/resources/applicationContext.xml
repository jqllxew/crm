<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
		
	<context:component-scan base-package="com.zhidi.crm.**.mapper,com.zhidi.crm.**.service"/>
	<!-- 读取外部文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	 <bean class="com.zhidi.crm.common.SpringBeanFactoryUtils"/>
	
	<!-- 开启动态代理 -->
	<aop:aspectj-autoproxy/>
	
	<!-- 配置c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<!-- 初始化连接数 -->
		<property name="initialPoolSize" value="1"/>
		<property name="minPoolSize" value="1"/>
		<property name="maxPoolSize" value="10"/>
		<property name="maxConnectionAge" value="28800"/>
		<!-- 最大闲置时间，避免mysql8小时陷阱 -->
		<property name="maxIdleTime" value="21600"/>
	</bean>

	<!-- 配置mybatis的SessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 将c3p0数据源注入SessionFactory -->
		<property name="dataSource" ref="dataSource" />
		<!-- 指定mybatis配置信息 -->
		<property name="configLocation" value="classpath:mybatis-Config.xml"/>
		<!-- 加载Mapper文件 -->
		<property name="mapperLocations" value="classpath:mapper/*/*.xml"/>
	</bean>
	
	<!-- 扫描dao接口所在包，并且自动为其创建代理对象 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 如果mapper文件和Dao接口同包同名，就可以不明确加载mapper文件 -->
		<property name="basePackage" value="com.zhidi.crm.**.mapper"/>
	</bean>
	
	<!-- 配置mybatis事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 使用注解方式声明事务管理 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager"/> -->
	<!-- 虽然指定了事务管理器，但是spring并不会自动管理事务，所以需要手动配置事务管理（spring的AOP技术和线程绑定） -->
	
	<!-- 配置事务通知，引入tx命名空间 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	<!-- 通知属性 -->
	<!-- 代表要被事务管理的方法名 -->
	<!-- 更新操作设置为REQUIRED -->
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="remove*" propagation="REQUIRED"/>
			
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="edit*" propagation="REQUIRED"/>
			<tx:method name="meger*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
			
			<!-- 对于只读操作(仅针对于查询)，把事务传播设置为 -->
			<tx:method name="get*" propagation="SUPPORTS"/>
			<tx:method name="query*" propagation="SUPPORTS"/>
			<tx:method name="find*" propagation="SUPPORTS"/>
			
		</tx:attributes>
	</tx:advice>
	<!-- 使用Spring AOP 把事务通知添加进切面 -->
	<aop:config>
		<!-- 单面通知(环绕通知) -->
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.zhidi.crm.*.service.impl..*.*(..))"/>
	</aop:config>
</beans>